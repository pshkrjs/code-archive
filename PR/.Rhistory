install.packages("caret", dependencies = TRUE)
install.packages("ggplot2")
library(caret)
dataFrame_training<-read.csv("training.csv", sep = ',', header = FALSE)
library(caret)
dataFrame_training<-read.csv("training.csv", sep = ',', header = FALSE)
setwd("~/Assignments/R assignments")
dataFrame_training<-read.csv("training.csv", sep = ',', header = FALSE)
intrain <- createDataPartition(y = dataFrame_training$V1, p= 1, list = FALSE)
training <- dataFrame_training[intrain,]
dataFrame_testing<-read.csv("testing.csv", sep = ',', header = FALSE)
intest <- createDataPartition(y = dataFrame_testing$V1, p= 1, list = FALSE)
testing <- dataFrame_testing[intest,]
dim(training)
trctrl <- trainControl(method = "repeatedcv", number = 10, repeats = 3)
svm_Radial <- train(V1 ~., data = training, method = "svmRadial", trControl=trctrl,  preProcess = c("center", "scale"),  tuneLength = 10)
svm_Linear<- train(V1 ~., data = training, method = "svmLinear", trControl=trctrl,  preProcess = c("center", "scale"),  tuneLength = 10)
svm_<- train(V1 ~., data = training, method = "qda", trControl=trctrl,  preProcess = c("center", "scale"),  tuneLength = 10)
test_pred <- predict(svm_Radial, newdata = testing)
test_pred_linear<-predict(svm_Linear, newdata =  testing)
test_pred_quad<-predict(svm_,newdata = testing)
test_pred
library(caret)
dataFrame_training<-read.csv("training.csv", sep = ',', header = FALSE)
intrain <- createDataPartition(y = dataFrame_training$V1, p= 1, list = FALSE)
training <- dataFrame_training[intrain,]
dataFrame_testing<-read.csv("testing.csv", sep = ',', header = FALSE)
intest <- createDataPartition(y = dataFrame_testing$V1, p= 1, list = FALSE)
testing <- dataFrame_testing[intest,]
dim(training)
#testing<-100
trctrl <- trainControl(method = "repeatedcv", number = 10, repeats = 3)
svm_Radial <- train(V1 ~., data = training, method = "svmRadial", trControl=trctrl,  preProcess = c("center", "scale"),  tuneLength = 10)
svm_Linear<- train(V1 ~., data = training, method = "svmLinear", trControl=trctrl,  preProcess = c("center", "scale"),  tuneLength = 10)
svm_<- train(V1 ~., data = training, method = "qda", trControl=trctrl,  preProcess = c("center", "scale"),  tuneLength = 10)
test_pred <- predict(svm_Radial, newdata = testing)
test_pred_linear<-predict(svm_Linear, newdata =  testing)
test_pred_quad<-predict(svm_,newdata = testing)
test_pred
