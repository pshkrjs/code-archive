# data <- read.csv("data_exp.csv", header = TRUE, sep = ",")
# data <- data[order(data$A),]
# data <- rpareto(10000, 2, 1)
data <- rgamma(3000, shape = 10, scale = 1)
data <- data[order(data)]
N <- length(data)
n <- N
accepted <- c()
pareto.MLE <- function(X){
n <- length(X)
m <- min(X)
a <- n/sum(log(X)-log(m))
return( c(m,a) )
}
checkDistribution <- function(distribution, accepted){
data2 <- data
for(j in 1:(ceiling(0.02*N))){
Sys.sleep(.1)
cat("\r", "Iteration ", j, ":", "\n")
dataMean <- mean(data2)
critical_value <- 1.63/sqrt(n)
frequency <- table(data2)
cfrequency <- c()
fo <- c()
for(i in 1:nrow(frequency)){
cfrequency <- append(cfrequency, sum(frequency[1:i]))
fo <- append(fo, cfrequency[i]/n)
}
values <- dimnames(frequency)
values <- as.numeric(values[[1]])
if(distribution == "NORMAL"){
fe <- pnorm(values, mean = dataMean, sd = sd(data)*(sqrt((n-1)/n))) # normal distribution
} else if(distribution == "EXPONENTIAL"){
fe <- pexp(values, rate=1/dataMean) # exponential distribution
} else if(distribution == "PARETO"){
params <- pareto.MLE(data2)
fe <- ppareto(values, scale = round(params[1]), shape = round(params[2])) # pareto distribution
} else if(distribution == "GAMMA"){
params <- fitdistr(data2, "gamma")
fe <- pgamma(values, shape = round(params[[1]][1]), rate = round(params[[1]][2])) # gamma distribution
} else {
stop(simpleError(paste0(distribution, " IS AN UNKNOWN DISTRIBUTION")))
}
dn <- abs(fe-fo)
maxDn <- max(dn)
if(!is.na(maxDn)){
if(maxDn <= critical_value){
print(paste0("CALCULATIONS FOR ", distribution, " DISTRIBUTION:"))
print("SUMMARY OF Fo")
print(rbind(head(fo),tail(fo)))
print("SUMMARY OF Fe")
print(rbind(head(fe),tail(fe)))
print(paste0("MAX Dn = ", maxDn))
print(paste0("CRITICAL VALUE = ", critical_value))
print(paste0("GIVEN DATA FOLLOWS ", distribution, " DISTRIBUTION AFTER REMOVING ", j-1, " OUTLIERS"))
accepted <- append(accepted, maxDn)
break
}
}
if((data2[1]-dataMean) < (data2[n]-dataMean)){
data2 <- data2[1:(n-1)]
} else{
data2 <- data2[2:n]
}
n <- n-1
if(j==floor(0.02*N)){
print(paste0("CALCULATIONS FOR ", distribution, " DISTRIBUTION:"))
print("SUMMARY OF Fo")
print(rbind(head(fo),tail(fo)))
print("SUMMARY OF Fe")
print(rbind(head(fe),tail(fe)))
print(paste0("MAX Dn = ", maxDn))
print(paste0("CRITICAL VALUE = ", critical_value))
print(paste0("GIVEN DATA DOES NOT FOLLOW ", distribution, " DISTRIBUTION AFTER REMOVING ", j-1, " OUTLIERS"))
accepted <- append(accepted, 5)
}
}
return(accepted)
}
accepted <- checkDistribution("NORMAL", accepted)
setwd("~/Stuff/Dropbox/Workspace/PR/Assignment3")
library(VGAM)
library(MASS)
# data <- read.csv("data_exp.csv", header = TRUE, sep = ",")
# data <- data[order(data$A),]
# data <- rpareto(10000, 2, 1)
data <- rgamma(3000, shape = 10, scale = 1)
data <- data[order(data)]
N <- length(data)
n <- N
accepted <- c()
pareto.MLE <- function(X){
n <- length(X)
m <- min(X)
a <- n/sum(log(X)-log(m))
return( c(m,a) )
}
checkDistribution <- function(distribution, accepted){
data2 <- data
for(j in 1:(ceiling(0.02*N))){
cat("\r", "Iteration ", j, ":", "\n")
dataMean <- mean(data2)
critical_value <- 1.63/sqrt(n)
frequency <- table(data2)
cfrequency <- c()
fo <- c()
for(i in 1:nrow(frequency)){
cfrequency <- append(cfrequency, sum(frequency[1:i]))
fo <- append(fo, cfrequency[i]/n)
}
values <- dimnames(frequency)
values <- as.numeric(values[[1]])
if(distribution == "NORMAL"){
fe <- pnorm(values, mean = dataMean, sd = sd(data)*(sqrt((n-1)/n))) # normal distribution
} else if(distribution == "EXPONENTIAL"){
fe <- pexp(values, rate=1/dataMean) # exponential distribution
} else if(distribution == "PARETO"){
params <- pareto.MLE(data2)
fe <- ppareto(values, scale = round(params[1]), shape = round(params[2])) # pareto distribution
} else if(distribution == "GAMMA"){
params <- fitdistr(data2, "gamma")
fe <- pgamma(values, shape = round(params[[1]][1]), rate = round(params[[1]][2])) # gamma distribution
} else {
stop(simpleError(paste0(distribution, " IS AN UNKNOWN DISTRIBUTION")))
}
dn <- abs(fe-fo)
maxDn <- max(dn)
if(!is.na(maxDn)){
if(maxDn <= critical_value){
print(paste0("\nCALCULATIONS FOR ", distribution, " DISTRIBUTION:"))
print("SUMMARY OF Fo")
print(rbind(head(fo),tail(fo)))
print("SUMMARY OF Fe")
print(rbind(head(fe),tail(fe)))
print(paste0("MAX Dn = ", maxDn))
print(paste0("CRITICAL VALUE = ", critical_value))
print(paste0("GIVEN DATA FOLLOWS ", distribution, " DISTRIBUTION AFTER REMOVING ", j-1, " OUTLIERS"))
accepted <- append(accepted, maxDn)
break
}
}
if((data2[1]-dataMean) < (data2[n]-dataMean)){
data2 <- data2[1:(n-1)]
} else{
data2 <- data2[2:n]
}
n <- n-1
if(j==floor(0.02*N)){
print(paste0("CALCULATIONS FOR ", distribution, " DISTRIBUTION:"))
print("SUMMARY OF Fo")
print(rbind(head(fo),tail(fo)))
print("SUMMARY OF Fe")
print(rbind(head(fe),tail(fe)))
print(paste0("MAX Dn = ", maxDn))
print(paste0("CRITICAL VALUE = ", critical_value))
print(paste0("GIVEN DATA DOES NOT FOLLOW ", distribution, " DISTRIBUTION AFTER REMOVING ", j-1, " OUTLIERS"))
accepted <- append(accepted, 5)
}
}
return(accepted)
}
accepted <- checkDistribution("NORMAL", accepted)
accepted <- checkDistribution("EXPONENTIAL", accepted)
setwd("~/Stuff/Dropbox/Workspace/PR/Assignment3")
library(VGAM)
library(MASS)
# data <- read.csv("data_exp.csv", header = TRUE, sep = ",")
# data <- data[order(data$A),]
# data <- rpareto(10000, 2, 1)
data <- rgamma(3000, shape = 10, scale = 1)
data <- data[order(data)]
N <- length(data)
n <- N
accepted <- c()
pareto.MLE <- function(X){
n <- length(X)
m <- min(X)
a <- n/sum(log(X)-log(m))
return( c(m,a) )
}
checkDistribution <- function(distribution, accepted){
data2 <- data
for(j in 1:(ceiling(0.02*N))){
cat("\r", "Iteration ", j, ":", "\n")
dataMean <- mean(data2)
critical_value <- 1.63/sqrt(n)
frequency <- table(data2)
cfrequency <- c()
fo <- c()
for(i in 1:nrow(frequency)){
cfrequency <- append(cfrequency, sum(frequency[1:i]))
fo <- append(fo, cfrequency[i]/n)
}
values <- dimnames(frequency)
values <- as.numeric(values[[1]])
if(distribution == "NORMAL"){
fe <- pnorm(values, mean = dataMean, sd = sd(data)*(sqrt((n-1)/n))) # normal distribution
} else if(distribution == "EXPONENTIAL"){
fe <- pexp(values, rate=1/dataMean) # exponential distribution
} else if(distribution == "PARETO"){
params <- pareto.MLE(data2)
fe <- ppareto(values, scale = round(params[1]), shape = round(params[2])) # pareto distribution
} else if(distribution == "GAMMA"){
params <- fitdistr(data2, "gamma")
fe <- pgamma(values, shape = round(params[[1]][1]), rate = round(params[[1]][2])) # gamma distribution
} else {
stop(simpleError(paste0(distribution, " IS AN UNKNOWN DISTRIBUTION")))
}
dn <- abs(fe-fo)
maxDn <- max(dn)
if(!is.na(maxDn)){
if(maxDn <= critical_value){
print(paste0("CALCULATIONS FOR ", distribution, " DISTRIBUTION:"))
print("SUMMARY OF Fo")
print(rbind(head(fo),tail(fo)))
print("SUMMARY OF Fe")
print(rbind(head(fe),tail(fe)))
print(paste0("MAX Dn = ", maxDn))
print(paste0("CRITICAL VALUE = ", critical_value))
print(paste0("GIVEN DATA FOLLOWS ", distribution, " DISTRIBUTION AFTER REMOVING ", j-1, " OUTLIERS"))
accepted <- append(accepted, maxDn)
break
}
}
if((data2[1]-dataMean) < (data2[n]-dataMean)){
data2 <- data2[1:(n-1)]
} else{
data2 <- data2[2:n]
}
n <- n-1
if(j==floor(0.02*N)){
print(paste0("CALCULATIONS FOR ", distribution, " DISTRIBUTION:"))
print("SUMMARY OF Fo")
print(rbind(head(fo),tail(fo)))
print("SUMMARY OF Fe")
print(rbind(head(fe),tail(fe)))
print(paste0("MAX Dn = ", maxDn))
print(paste0("CRITICAL VALUE = ", critical_value))
print(paste0("GIVEN DATA DOES NOT FOLLOW ", distribution, " DISTRIBUTION AFTER REMOVING ", j-1, " OUTLIERS"))
accepted <- append(accepted, 5)
}
}
return(accepted)
}
accepted <- checkDistribution("NORMAL", accepted)
setwd("~/Stuff/Dropbox/Workspace/PR/Assignment3")
library(VGAM)
library(MASS)
# data <- read.csv("data_exp.csv", header = TRUE, sep = ",")
# data <- data[order(data$A),]
# data <- rpareto(10000, 2, 1)
data <- rgamma(3000, shape = 10, scale = 1)
data <- data[order(data)]
N <- length(data)
n <- N
accepted <- c()
pareto.MLE <- function(X){
n <- length(X)
m <- min(X)
a <- n/sum(log(X)-log(m))
return( c(m,a) )
}
checkDistribution <- function(distribution, accepted){
data2 <- data
for(j in 1:(ceiling(0.02*N))){
cat("\r", "Iteration ", j, ":")
dataMean <- mean(data2)
critical_value <- 1.63/sqrt(n)
frequency <- table(data2)
cfrequency <- c()
fo <- c()
for(i in 1:nrow(frequency)){
cfrequency <- append(cfrequency, sum(frequency[1:i]))
fo <- append(fo, cfrequency[i]/n)
}
values <- dimnames(frequency)
values <- as.numeric(values[[1]])
if(distribution == "NORMAL"){
fe <- pnorm(values, mean = dataMean, sd = sd(data)*(sqrt((n-1)/n))) # normal distribution
} else if(distribution == "EXPONENTIAL"){
fe <- pexp(values, rate=1/dataMean) # exponential distribution
} else if(distribution == "PARETO"){
params <- pareto.MLE(data2)
fe <- ppareto(values, scale = round(params[1]), shape = round(params[2])) # pareto distribution
} else if(distribution == "GAMMA"){
params <- fitdistr(data2, "gamma")
fe <- pgamma(values, shape = round(params[[1]][1]), rate = round(params[[1]][2])) # gamma distribution
} else {
stop(simpleError(paste0(distribution, " IS AN UNKNOWN DISTRIBUTION")))
}
dn <- abs(fe-fo)
maxDn <- max(dn)
if(!is.na(maxDn)){
if(maxDn <= critical_value){
print(paste0("\nCALCULATIONS FOR ", distribution, " DISTRIBUTION:"))
print("SUMMARY OF Fo")
print(rbind(head(fo),tail(fo)))
print("SUMMARY OF Fe")
print(rbind(head(fe),tail(fe)))
print(paste0("MAX Dn = ", maxDn))
print(paste0("CRITICAL VALUE = ", critical_value))
print(paste0("GIVEN DATA FOLLOWS ", distribution, " DISTRIBUTION AFTER REMOVING ", j-1, " OUTLIERS"))
accepted <- append(accepted, maxDn)
break
}
}
if((data2[1]-dataMean) < (data2[n]-dataMean)){
data2 <- data2[1:(n-1)]
} else{
data2 <- data2[2:n]
}
n <- n-1
if(j==floor(0.02*N)){
print(paste0("\nCALCULATIONS FOR ", distribution, " DISTRIBUTION:"))
print("SUMMARY OF Fo")
print(rbind(head(fo),tail(fo)))
print("SUMMARY OF Fe")
print(rbind(head(fe),tail(fe)))
print(paste0("MAX Dn = ", maxDn))
print(paste0("CRITICAL VALUE = ", critical_value))
print(paste0("GIVEN DATA DOES NOT FOLLOW ", distribution, " DISTRIBUTION AFTER REMOVING ", j-1, " OUTLIERS"))
accepted <- append(accepted, 5)
}
}
return(accepted)
}
accepted <- checkDistribution("NORMAL", accepted)
accepted <- checkDistribution("EXPONENTIAL", accepted)
accepted <- checkDistribution("PARETO", accepted)
accepted <- checkDistribution("GAMMA", accepted)
distribution <- switch(which.min(accepted), "NORMAL", "EXPONENTIAL", "PARETO", "GAMMA")
if(min(accepted) != 5){
print(paste0("BEST FIT FOR GIVEN DATA IS ", distribution, " DISTRIBUTION"))
}else{
print("GIVEN DATA DOES NOT FOLLOW ANY OF THE KNOWN DISTRIBUTIONS")
}
setwd("~/Stuff/Dropbox/Workspace/PR/Assignment3")
library(VGAM)
library(MASS)
# data <- read.csv("data_exp.csv", header = TRUE, sep = ",")
# data <- data[order(data$A),]
# data <- rpareto(10000, 2, 1)
data <- rgamma(3000, shape = 10, scale = 1)
data <- data[order(data)]
N <- length(data)
n <- N
accepted <- c()
pareto.MLE <- function(X){
n <- length(X)
m <- min(X)
a <- n/sum(log(X)-log(m))
return( c(m,a) )
}
checkDistribution <- function(distribution, accepted){
data2 <- data
for(j in 1:(ceiling(0.02*N))){
cat("\r", "Iteration ", j, ":")
dataMean <- mean(data2)
critical_value <- 1.63/sqrt(n)
frequency <- table(data2)
cfrequency <- c()
fo <- c()
for(i in 1:nrow(frequency)){
cfrequency <- append(cfrequency, sum(frequency[1:i]))
fo <- append(fo, cfrequency[i]/n)
}
values <- dimnames(frequency)
values <- as.numeric(values[[1]])
if(distribution == "NORMAL"){
fe <- pnorm(values, mean = dataMean, sd = sd(data)*(sqrt((n-1)/n))) # normal distribution
} else if(distribution == "EXPONENTIAL"){
fe <- pexp(values, rate=1/dataMean) # exponential distribution
} else if(distribution == "PARETO"){
params <- pareto.MLE(data2)
fe <- ppareto(values, scale = round(params[1]), shape = round(params[2])) # pareto distribution
} else if(distribution == "GAMMA"){
params <- fitdistr(data2, "gamma")
fe <- pgamma(values, shape = round(params[[1]][1]), rate = round(params[[1]][2])) # gamma distribution
} else {
stop(simpleError(paste0(distribution, " IS AN UNKNOWN DISTRIBUTION")))
}
dn <- abs(fe-fo)
maxDn <- max(dn)
if(!is.na(maxDn)){
if(maxDn <= critical_value){
print(paste0("\n","CALCULATIONS FOR ", distribution, " DISTRIBUTION:"))
print("SUMMARY OF Fo")
print(rbind(head(fo),tail(fo)))
print("SUMMARY OF Fe")
print(rbind(head(fe),tail(fe)))
print(paste0("MAX Dn = ", maxDn))
print(paste0("CRITICAL VALUE = ", critical_value))
print(paste0("GIVEN DATA FOLLOWS ", distribution, " DISTRIBUTION AFTER REMOVING ", j-1, " OUTLIERS"))
accepted <- append(accepted, maxDn)
break
}
}
if((data2[1]-dataMean) < (data2[n]-dataMean)){
data2 <- data2[1:(n-1)]
} else{
data2 <- data2[2:n]
}
n <- n-1
if(j==floor(0.02*N)){
print(paste0("\n","CALCULATIONS FOR ", distribution, " DISTRIBUTION:"))
print("SUMMARY OF Fo")
print(rbind(head(fo),tail(fo)))
print("SUMMARY OF Fe")
print(rbind(head(fe),tail(fe)))
print(paste0("MAX Dn = ", maxDn))
print(paste0("CRITICAL VALUE = ", critical_value))
print(paste0("GIVEN DATA DOES NOT FOLLOW ", distribution, " DISTRIBUTION AFTER REMOVING ", j-1, " OUTLIERS"))
accepted <- append(accepted, 5)
}
}
return(accepted)
}
accepted <- checkDistribution("NORMAL", accepted)
accepted <- checkDistribution("EXPONENTIAL", accepted)
setwd("~/Stuff/Dropbox/Workspace/PR/Assignment3")
library(VGAM)
library(MASS)
# data <- read.csv("data_exp.csv", header = TRUE, sep = ",")
# data <- data[order(data$A),]
# data <- rpareto(10000, 2, 1)
data <- rgamma(3000, shape = 10, scale = 1)
data <- data[order(data)]
N <- length(data)
n <- N
accepted <- c()
pareto.MLE <- function(X){
n <- length(X)
m <- min(X)
a <- n/sum(log(X)-log(m))
return( c(m,a) )
}
checkDistribution <- function(distribution, accepted){
data2 <- data
for(j in 1:(ceiling(0.02*N))){
cat("\r", "Iteration ", j, ":")
dataMean <- mean(data2)
critical_value <- 1.63/sqrt(n)
frequency <- table(data2)
cfrequency <- c()
fo <- c()
for(i in 1:nrow(frequency)){
cfrequency <- append(cfrequency, sum(frequency[1:i]))
fo <- append(fo, cfrequency[i]/n)
}
values <- dimnames(frequency)
values <- as.numeric(values[[1]])
if(distribution == "NORMAL"){
fe <- pnorm(values, mean = dataMean, sd = sd(data)*(sqrt((n-1)/n))) # normal distribution
} else if(distribution == "EXPONENTIAL"){
fe <- pexp(values, rate=1/dataMean) # exponential distribution
} else if(distribution == "PARETO"){
params <- pareto.MLE(data2)
fe <- ppareto(values, scale = round(params[1]), shape = round(params[2])) # pareto distribution
} else if(distribution == "GAMMA"){
params <- fitdistr(data2, "gamma")
fe <- pgamma(values, shape = round(params[[1]][1]), rate = round(params[[1]][2])) # gamma distribution
} else {
stop(simpleError(paste0(distribution, " IS AN UNKNOWN DISTRIBUTION")))
}
dn <- abs(fe-fo)
maxDn <- max(dn)
if(!is.na(maxDn)){
if(maxDn <= critical_value){
cat("\n")
print(paste0("CALCULATIONS FOR ", distribution, " DISTRIBUTION:"))
print("SUMMARY OF Fo")
print(rbind(head(fo),tail(fo)))
print("SUMMARY OF Fe")
print(rbind(head(fe),tail(fe)))
print(paste0("MAX Dn = ", maxDn))
print(paste0("CRITICAL VALUE = ", critical_value))
print(paste0("GIVEN DATA FOLLOWS ", distribution, " DISTRIBUTION AFTER REMOVING ", j-1, " OUTLIERS"))
accepted <- append(accepted, maxDn)
break
}
}
if((data2[1]-dataMean) < (data2[n]-dataMean)){
data2 <- data2[1:(n-1)]
} else{
data2 <- data2[2:n]
}
n <- n-1
if(j==floor(0.02*N)){
cat("\n")
print(paste0("CALCULATIONS FOR ", distribution, " DISTRIBUTION:"))
print("SUMMARY OF Fo")
print(rbind(head(fo),tail(fo)))
print("SUMMARY OF Fe")
print(rbind(head(fe),tail(fe)))
print(paste0("MAX Dn = ", maxDn))
print(paste0("CRITICAL VALUE = ", critical_value))
print(paste0("GIVEN DATA DOES NOT FOLLOW ", distribution, " DISTRIBUTION AFTER REMOVING ", j-1, " OUTLIERS"))
accepted <- append(accepted, 5)
}
}
return(accepted)
}
accepted <- checkDistribution("NORMAL", accepted)
accepted <- checkDistribution("EXPONENTIAL", accepted)
accepted <- checkDistribution("PARETO", accepted)
accepted <- checkDistribution("GAMMA", accepted)
distribution <- switch(which.min(accepted), "NORMAL", "EXPONENTIAL", "PARETO", "GAMMA")
if(min(accepted) != 5){
print(paste0("BEST FIT FOR GIVEN DATA IS ", distribution, " DISTRIBUTION"))
}else{
print("GIVEN DATA DOES NOT FOLLOW ANY OF THE KNOWN DISTRIBUTIONS")
}
